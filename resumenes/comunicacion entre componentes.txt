---------------
inputs/outputs
---------------

----------
inputs
----------
(hace que funcionen los corchetes)

sirven para poder dividir un componente en subcomponentes y pasar los datos del componente mas grande (el padre), al componente mas chico

para comunicar componentes, lo que hay que hacer es en el componente padre bindear el atributo que se va a utilizar 
encerrado entre corchetes e indicandole un nombre 

y en el componente hijo hay que declarar el atributo y el tipo del mismo , pero tambien hay que importar la palabra reservada input 

ej:

componente padre

<app-input-beer [beer]="beer"> </app-input-beer> 

componente hijo:

import [cerveza] from "../"

@Input()  (el @input siempre se escribe antes de CADA propiedad )
cerveza: cantidad;

------------------------------------------------------------------------------------------------------------------------------------

----------
outputs
----------

(hace que funcionen los parentesis, junto con el emit, que se usa dentro de las funciones cuando se realiza el evento)

al igual que el input, ambos son "decoradores" y hay que importarlo para poder usarlo 

este lo que permite es indicar los datos de salida 

se le puede aplicar un "EventeEmitters" el cual nos deja generar nuestros propios eventos 

se puede usar los mismos nombres que declaramos en el input pero agregandole Change al final, seguido del tipo EventEmitter<"tipo"> 
y luego del tipo hay que hacerle un new EventEmitter<"tipo">;


ej: 

@Output
cervezaChange: EventEmitter<cantidad> = EventEmitter<cantidad>

